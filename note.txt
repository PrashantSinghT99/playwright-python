ASYNC AND SYNC scripts

PYTEST and ini parameters

#--headed
#--baseurl https://www.saucedemo.com
#--browser
#--browser-channel
#--tracing on
#--tracing retain-on-failure
#https://trace.playwright.dev/
# playwright show-trace test-results\pytest-test-demo-py-test-saucelab-chromium\trace.zip
--maxfail=1
--exitfirst
--html=Reports/report.html

test.py::test_function to return selective testcase

-k filter or run as per need for eg: -k one  |   -k "one and not accum"

CODEGEN AND INSPECTOR

To record and create scripts npx playwright codegen https://www.saucedemo.com/ 
To run pytest codegen.py 
npx playwright codegen --device="iPhone 13" https://www.saucedemo.com/
npx playwright codegen --viewport-size=800,600 https://google.com
npx playwright codegen --lang="it-IT" https://google.com 
npx playwright codegen --color-scheme=dark https://www.saucedemo.com/
For step over play use page.pause()

DEBUG SELECTORS
playwright.$('input')
playwright.$$('input')
playwright.inspect('input')



HANDLING PAGES

context.pages //list
new_page.bring_to_front() //switch to new page list[1]

COOKIES

Get all the cookies from page.
my_cookies = page.context.cookies()

Clearing all the cookies.
page.context.clear_cookies()

Setting new cookies to page.
page.context.add_cookies([new_cookies])



#pytest fixtures
module runs before all testcase
function runs for every testcase


MARKS 

https://docs.pytest.org/en/stable/how-to/mark.html
for user defined register in pytest.ini


PLUGINS

CODE COVERAGE

--cov=unit-tests 
--cov=branch
--cov-report html

RUN IN PARALLEL

pytest-xdist  

-n 3

fixtures

testcase expected to fail pytest.mark.xfail

screenshot


--screenshot=on
--screenshot=only-on-failure


PARALLEL EXECUTION

-n 2